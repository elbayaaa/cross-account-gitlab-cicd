image: amazon/aws-sam-cli-build-image-python3.8

before_script:
  - yum install -y jq

stages:
  - test
  - build
  - staging
  - staging-integration-test
  - prod

unit-test:
  stage: test
  only:
    - mainline
    - /^feature-*$/
  script: |
    pip install pytest
    pip install -r ${CI_PROJECT_DIR}/hello_world/requirements.txt
    python -m pytest tests/unit

build-and-deploy-feature:
  stage: build
  only:
    - /^feature-*$/
  script: |
    . cicd/assume-role.sh $AWS_ACCESS_KEY_ID \
                          $AWS_SECRET_ACCESS_KEY \
                          {{STAGING_REGION}} \
                          {{STAGING_DEPLOYER_ACCESS_ROLE_ARN}} \
                          feature-deployment
    sam build
    sam deploy --stack-name features-${CI_COMMIT_REF_NAME}-cfn-stack \
               --capabilities CAPABILITY_IAM \
               --region {{STAGING_REGION}} \
               --s3-bucket {{STAGING_ARTIFACTS_BUCKET}} \
               --no-fail-on-empty-changeset \
               --role-arn {{STAGING_CFN_DEPLOYMENT_ROLE_ARN}}
build:
  stage: build
  only:
    - mainline
  script: |
    sam build
    user_access_key_id=$AWS_ACCESS_KEY_ID
    user_secret_access_key=$AWS_SECRET_ACCESS_KEY
    . cicd/assume-role.sh $user_access_key_id \
                          $user_secret_access_key \
                          {{STAGING_REGION}} \
                          {{STAGING_DEPLOYER_ACCESS_ROLE_ARN}} \
                          staging-deployment
    sam package \
          --s3-bucket {{STAGING_ARTIFACTS_BUCKET}} \
          --region {{STAGING_REGION}} \
          --output-template-file packaged-{{STAGING_REGION}}-{{STAGING_ACCOUNT_ID}}.yaml

    . cicd/assume-role.sh $user_access_key_id \
                          $user_secret_access_key \
                          {{PROD_REGION}} \
                          {{PROD_DEPLOYER_ACCESS_ROLE_ARN}} \
                          prod-deployment
    sam package \
           --s3-bucket {{PROD_ARTIFACTS_BUCKET}} \
           --region {{PROD_REGION}} \
           --output-template-file packaged-{{PROD_REGION}}-{{PROD_ACCOUNT_ID}}.yaml
  artifacts:
    paths:
      - packaged-{{STAGING_REGION}}-{{STAGING_ACCOUNT_ID}}.yaml
      - packaged-{{PROD_REGION}}-{{PROD_ACCOUNT_ID}}.yaml
    expire_in: 1 year

deploy-staging:
  stage: staging
  only:
    - mainline
  script: |
    . cicd/assume-role.sh $AWS_ACCESS_KEY_ID \
                          $AWS_SECRET_ACCESS_KEY \
                          {{STAGING_REGION}} \
                          {{STAGING_DEPLOYER_ACCESS_ROLE_ARN}} \
                          staging-deployment
    sam deploy --stack-name staging-cfn-stack \
               --template packaged-{{STAGING_REGION}}-{{STAGING_ACCOUNT_ID}}.yaml \
               --capabilities CAPABILITY_IAM \
               --region {{STAGING_REGION}} \
               --s3-bucket {{STAGING_ARTIFACTS_BUCKET}} \
               --no-fail-on-empty-changeset \
               --role-arn {{STAGING_CFN_DEPLOYMENT_ROLE_ARN}}

staging-integration-test:
  stage: staging-integration-test
  only:
    - mainline
  script: |
    pip install -r ${CI_PROJECT_DIR}/tests/integration/requirements.txt
    . cicd/assume-role.sh $AWS_ACCESS_KEY_ID \
                          $AWS_SECRET_ACCESS_KEY \
                          {{STAGING_REGION}} \
                          {{STAGING_DEPLOYER_ACCESS_ROLE_ARN}} \
                          staging-deployment
    apiDomain=$(aws cloudformation describe-stack-resource \
                                   --logical-resource-id ServerlessRestApi \
                                   --stack-name staging-cfn-stack \
                                   --region {{STAGING_REGION}} \
                                   --query 'StackResourceDetail.PhysicalResourceId' \
                                   --output text)
    API_DOMAIN=$apiDomain REGION={{STAGING_REGION}} python -m unittest discover -s tests/integration

deploy-prod:
  stage: prod
  only:
    - mainline
  script: |
    . cicd/assume-role.sh $AWS_ACCESS_KEY_ID \
                          $AWS_SECRET_ACCESS_KEY \
                          {{PROD_REGION}} \
                          {{PROD_DEPLOYER_ACCESS_ROLE_ARN}} \
                          prod-deployment
    sam deploy --stack-name prod-cfn-stack \
               --template packaged-{{PROD_REGION}}-{{PROD_ACCOUNT_ID}}.yaml \
               --capabilities CAPABILITY_IAM \
               --region {{PROD_REGION}} \
               --s3-bucket {{PROD_ARTIFACTS_BUCKET}} \
               --no-fail-on-empty-changeset \
               --role-arn {{PROD_CFN_DEPLOYMENT_ROLE_ARN}}
